services:
  redis:
    image: redis/redis-stack:latest
    container_name: redis-global
    ports:
      - "6379:6379"  # Redis port
      - "8001:8001"  # Redis Insight UI
    volumes:
      - ./redis-data:/data  # Persist Redis data
    networks:
      - global-services-network
    restart: always

  mysql:
    image: mysql:8.0.19
    platform: linux/amd64
    container_name: mysql-global
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: testdb
      MYSQL_USER: admin
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"  # MySQL port
    volumes:
      - ./mysql-data:/var/lib/mysql  # Persist MySQL data
      - ./mysql.cnf:/etc/mysql/conf.d/mysql.cnf  # Mount custom config
    networks:
      - global-services-network
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "8888:80"  # Expose phpMyAdmin on port 8888
    environment:
      PMA_HOST: mysql-global  # Connect phpMyAdmin to MySQL container
      PMA_USER: root          # MySQL user
      PMA_PASSWORD: root      # MySQL password
      PMA_ARBITRARY: 1        # Allow connections to arbitrary MySQL hosts
    networks:
      - global-services-network
    restart: always
    depends_on:
      mysql:
        condition: service_healthy

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP server
    networks:
      - global-services-network
    restart: always

networks:
  global-services-network:
    name: global-services-network
    driver: bridge
